{"version":3,"sources":["constants/constants.ts","components/About.tsx","components/Header.tsx","components/TodoForm.tsx","components/TodoList.tsx","components/MainPage.tsx","utils/storage.ts","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["TODOS_KEY","About","history","useHistory","className","type","id","name","onClick","push","Header","exact","to","TodoForm","props","useState","value","setValue","onAddTodo","onChange","evt","target","onKeyPress","key","placeholder","htmlFor","TodoList","todos","onToggle","handleClickDeleteIcon","length","map","todo","todoClassName","classNames","completed","checked","todoText","MainPage","setTodos","handleAddTodo","useCallback","newTodo","Date","now","prev","toggleTodo","filter","useEffect","datakey","JSON","parse","localStorage","getItem","data","setItem","stringify","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","document","getElementById"],"mappings":"mMAAaA,EAAmB,Q,OCInBC,EAAkB,WAE3B,IAAMC,EAAUC,cAIhB,OACI,sBAAKC,UAAU,mBAAf,UACI,mBAAGA,UAAU,SAAb,0CACA,wBACIC,KAAK,SACLC,GAAG,OACHC,KAAK,OACLH,UAAU,qCACVI,QAVkB,kBAAMN,EAAQO,KAAK,MAKzC,SDX4B,sGEE3BC,EAAmB,WAC5B,OACI,8BACI,sBAAKN,UAAU,yCAAf,UACI,cAAC,IAAD,CAASO,OAAK,EAACC,GAAG,IAAIR,UAAU,aAAhC,SFLgB,uBEMhB,qBAAIE,GAAG,aAAaF,UAAU,6BAA9B,UACI,6BAAI,cAAC,IAAD,CAASQ,GAAG,IAAID,OAAK,EAArB,SFNkB,8DEOtB,6BAAI,cAAC,IAAD,CAASC,GAAG,SAAZ,SFNe,mF,gBGa1BC,EAAqC,SAACC,GAAW,IAAD,EACjCC,mBAAiB,IADgB,mBACpDC,EADoD,KAC7CC,EAD6C,KAEnDC,EAAcJ,EAAdI,UA4BR,OACE,sBAAKd,UAAU,kBAAf,UACE,uBACEY,MAAOA,EACPG,SAvBoB,SAACC,GACzBH,EAASG,EAAIC,OAAOL,QAuBhBM,WAZmB,SAACF,GACR,UAAZA,EAAIG,MACNL,EAAUF,GACVC,EAAS,MAUPZ,KAAK,OACLC,GAAG,QACHkB,YAAY,yHAEd,uBAAOC,QAAQ,QAAQrB,UAAU,SAAjC,sI,iBC/COsB,EAAoC,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,sBACnE,OAAKF,EAAMG,OAEP,6BACGH,EAAMI,KAAI,SAAAC,GACT,IAAMC,EAAgBC,IAAW,OAAQ,CACvC,UAAaF,EAAKG,YAEpB,OACE,oBAAmB/B,UAAY6B,EAA/B,SACE,kCACE,uBACE3B,GAAG,WACHD,KAAK,WACL+B,QAASJ,EAAKG,UACdhB,SAAU,kBAAIS,EAASI,EAAK1B,OAE9B,+BAAS0B,EAAKK,WACd,mBACEjC,UAAU,0BACVI,QAAS,kBAAMqB,EAAsBG,EAAK1B,KAF5C,wBATK0B,EAAK1B,SARI,oBAAIF,UAAU,wBAAd,SJXU,gKKO3BkC,EAAoB,WAAO,IAAD,EAETvB,mBAAkB,IAFT,mBAE5BY,EAF4B,KAErBY,EAFqB,KAI7BC,EAAgBC,uBAAY,SAACJ,GAC/B,IAAMK,EAAiB,CACrBL,WACA/B,GAAIqC,KAAKC,MACTT,WAAW,GAEbI,GAAS,SAAAM,GAAI,OAAKH,GAAL,mBAAiBG,SAC7B,IAEGC,EAAaL,uBAAY,SAACnC,GAC9BiC,EAASZ,EAAMI,KAAI,SAAAC,GAIf,OAHIA,EAAK1B,KAAOA,IACd0B,EAAKG,WAAaH,EAAKG,WAElBH,QAEV,CAACL,IAEEE,EAAwBY,uBAAY,SAACnC,GACzCiC,GAAS,SAAAM,GAAI,OAAIA,EAAKE,QAAO,SAAAf,GAAI,OAAIA,EAAK1B,KAAOA,UAChD,IAWL,OATE0C,qBAAU,WChCkB,IAACC,EDiC3BV,GCjC2BU,EDiCCjD,ECjCsBkD,KAAKC,MAAMC,aAAaC,QAAQJ,IAAY,UDkC7F,IAEHD,qBAAU,WClCiB,IAACC,EAAgBK,EAAhBL,EDmCTjD,ECnCyBsD,EDmCd3B,ECnCoCyB,aAAaG,QAAQN,EAASC,KAAKM,UAAUF,MDoC5G,CAAC3B,IAIF,qCACI,cAAC,EAAD,CAAUT,UAAWsB,IACrB,cAAC,EAAD,CACIb,MAAOA,EACPC,SAAUkB,EACVjB,sBAAuBA,QE5BxB4B,EAdO,kBACpB,qCACE,cAAC,EAAD,IACA,qBAAKrD,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsD,KAAK,IAAI/C,OAAK,EAACgD,UAAYrB,IAClC,cAAC,IAAD,CAAOoB,KAAK,SAASC,UAAW1D,aCCzB2D,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,iBACE,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b1174094.chunk.js","sourcesContent":["export const TODOS_KEY:string = 'todos';\nexport const TODOLIST_IS_EMPTY:string = \"Запланированных дел пока нет.\";\nexport const BACK_BUTTON_LABEL:string = \"Назад к списку дел\";\nexport const LOGO_TEXT:string = \"React & Typescript\";\nexport const TODOLIST_LINK_LABEL:string = \"Список дел\";\nexport const ABOUT_LINK_LABEL:string = \"О приложении\";\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { BACK_BUTTON_LABEL } from '../constants/constants';\n\nexport const About: React.FC = () => {\n    \n    const history = useHistory();\n\n    const handleClickBackButton = () => history.push('/');\n\n    return (\n        <div className=\"centered-content\">\n            <p className=\"center\">This is a page about project</p>\n            <button\n                type=\"button\"\n                id=\"back\"\n                name=\"back\"\n                className=\"btn-small waves-effect waves-light\"\n                onClick={handleClickBackButton}\n            >\n                {BACK_BUTTON_LABEL}\n            </button>\n        </div>\n    )\n};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { ABOUT_LINK_LABEL, LOGO_TEXT, TODOLIST_LINK_LABEL } from '../constants/constants';\n\nexport const Header: React.FC = () => {\n    return (\n        <nav>\n            <div className=\"nav-wrapper padding-lr purple darken-3\">\n                <NavLink exact to=\"/\" className=\"brand-logo\">{ LOGO_TEXT}</NavLink>\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n                    <li><NavLink to=\"/\" exact>{ TODOLIST_LINK_LABEL}</NavLink></li>\n                    <li><NavLink to=\"/about\">{ ABOUT_LINK_LABEL}</NavLink></li>\n                </ul>\n            </div>\n        </nav>\n    );\n}","import React, { useState } from \"react\";\n/**\n * Интерфейс пропсов компонента TodoForm\n */\ninterface ITodoFormProps {\n  onAddTodo(todoText: string): void\n}\n\n/**\n * @function TodoForm\n * @description Функциональный компонент\n * Форма добавления задачи.\n * @param {ITodoFormProps} props\n * @property {function} props.onAddTodo - метод сохранения набранной задачи \n * @returns {void} void\n * @since v.1.0.0\n * @public\n */\nexport const TodoForm: React.FC<ITodoFormProps> = (props) => {\n  const [value, setValue] = useState<string>('')\n  const { onAddTodo } = props;\n  /**\n   * @method handleInputChange\n   * @description Обработчик ввода значений в инпут добавления задачи\n   * @param {SyntheticEvent} evt - событие\n   * @returns {void} void\n   * @since v.1.0.0\n   * @public\n   */\n  const handleInputChange = (evt: React.ChangeEvent<HTMLInputElement>): void => {\n    setValue(evt.target.value)\n  }\n\n  /**\n   * @method handlePressEnter\n   * @description Обработчик нажатия на \"Enter\" - сохранения набранной задачи\n   * @param {SyntheticEvent} evt - событие\n   * @returns {void} void\n   * @since v.1.0.0\n   * @public\n   */\n  const handlePressEnter = (evt: React.KeyboardEvent): void => {\n    if (evt.key === 'Enter') {\n      onAddTodo(value);\n      setValue('');\n    }\n  }\n\n  return (\n    <div className=\"input-field mt2\">\n      <input\n        value={value}\n        onChange={handleInputChange}\n        onKeyPress={handlePressEnter}\n        type=\"text\"\n        id=\"title\"\n        placeholder=\"Введите название дела\"\n      />\n      <label htmlFor=\"title\" className=\"active\">\n        Введите название дела\n      </label>\n    </div>\n  )\n}","import React from 'react';\nimport classNames from 'classnames';\nimport { ITodo } from '../interfaces';\nimport { TODOLIST_IS_EMPTY } from '../constants/constants';\n\ntype TodoListProps = {\n  todos: ITodo[],\n  onToggle: (id: number) => void,\n  handleClickDeleteIcon: (id: number) => void,\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos, onToggle, handleClickDeleteIcon }) => {\n  if (!todos.length) { return <h5 className=\"center no-todos-title\">{TODOLIST_IS_EMPTY }</h5 >}\n    return (\n      <ul>\n        {todos.map(todo => {\n          const todoClassName = classNames(\"todo\", {\n            \"completed\": todo.completed\n          })\n          return (\n            <li key={todo.id } className={ todoClassName } >\n              <label >\n                <input\n                  id=\"checkbox\"\n                  type=\"checkbox\"\n                  checked={todo.completed}\n                  onChange={()=>onToggle(todo.id)}\n                />\n                <span >{ todo.todoText }</span>\n                <i\n                  className=\"material-icons red-text\"\n                  onClick={() => handleClickDeleteIcon(todo.id)} >delete</i>\n              </label>\n            </li>\n          )}\n        )}\n      </ul>\n    );\n}","import React, {useState, useEffect, useCallback} from 'react';\nimport { TodoForm } from './TodoForm';\nimport { TodoList } from './TodoList';\nimport { ITodo } from '../interfaces';\nimport { TODOS_KEY } from '../constants/constants';\nimport { getDataFromStorage, setDataToStorage } from '../utils/storage';\n\n\nexport const MainPage:React.FC = () => {\n\n    const [todos, setTodos] = useState<ITodo[]>([]);\n\n    const handleAddTodo = useCallback((todoText: string): void => {\n        const newTodo: ITodo = {\n          todoText,\n          id: Date.now(),\n          completed: false,\n        }\n        setTodos(prev => [newTodo, ...prev]);\n      }, [])\n    \n      const toggleTodo = useCallback((id: number) => {\n        setTodos(todos.map(todo => {\n            if (todo.id === id) {\n              todo.completed = !todo.completed\n            }\n            return todo;\n          }))\n      }, [todos])\n      \n      const handleClickDeleteIcon = useCallback((id: number): void => {\n        setTodos(prev => prev.filter(todo => todo.id !== id));\n      }, [])\n    \n      useEffect(() => {\n        setTodos(getDataFromStorage(TODOS_KEY));\n      }, [])\n      \n      useEffect(() => {\n        setDataToStorage(TODOS_KEY, todos)\n      }, [todos])\n\n    \n    return (\n        <>\n            <TodoForm onAddTodo={handleAddTodo} />\n            <TodoList\n                todos={todos}\n                onToggle={toggleTodo}\n                handleClickDeleteIcon={handleClickDeleteIcon}\n            />\n        </>\n    )\n}\n\n\n","import { ITodo } from \"../interfaces\";\n\nexport const getDataFromStorage = (datakey: string):[] => JSON.parse(localStorage.getItem(datakey) || '[]');\n\nexport const setDataToStorage = ((datakey:string, data:ITodo[]):void => localStorage.setItem(datakey, JSON.stringify(data)))","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { About } from './About';\nimport { Header } from './Header';\nimport { MainPage } from './MainPage';\n\n\nconst App: React.FC = () => (\n  <>\n    <Header />\n    <div className=\"container\">\n      <Switch>\n        <Route path=\"/\" exact component={ MainPage } />\n        <Route path=\"/about\" component={About} />\n      </Switch>\n      \n    </div>\n  </>\n);\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport {render} from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nrender(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}